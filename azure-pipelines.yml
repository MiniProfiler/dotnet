# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  all-dbs-password: 'Password12!' # Same across mysql and postgres
  all-dbs-name: 'test' # Same across mysql and postgres
  postgres-path: 'C:\Program Files\PostgreSQL\9.6'
  postgres-user: 'postgres'
  mysql-path: 'C:\Program Files\MySql\MySQL Server 5.7'
  mysql-user: 'root'

steps:
- task: NuGetToolInstaller@0

- task: PowerShell@1
  inputs: 
    targetType: 'inline'
    script: 'nuget install redis-64 -excludeversion'
    displayName: 'redis nuget'

- task: PowerShell@2
  inputs: 
    targetType: 'inline'
    script: 'redis-64\tools\redis-server.exe --service-install; redis-64\tools\redis-server.exe --service-start'
    displayName: 'redis install and run'

- task: PowerShell@3 
  inputs: 
    targetType: 'inline'
    script: 'createdb $(all-dbs-name)' # inline script
    displayName: 'create postgres db' #

- task: PowerShell@4
  inputs:
    targetType: 'filePath' # Optional. Options: filePath, inline
    filePath: .\build\dotnet-install.ps1 # Required when targetType == FilePath
    arguments: '-Version 2.1.300' # Optional
    env:

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
