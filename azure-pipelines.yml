# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  all-dbs-password: 'Password12!' # Same across mysql and postgres
  all-dbs-name: 'test' # Same across mysql and postgres
  postgres-path: 'C:\Program Files\PostgreSQL\9.6'
  postgres-user: 'postgres'
  mysql-path: 'C:\Program Files\MySql\MySQL Server 5.7'
  mysql-user: 'root'

steps:
- task: NuGetToolInstaller@0

- powershell: 'createdb $(all-dbs-name)' # inline script
  displayName: 'create postgres db' #
  env:
    POSTGRES_PATH: $(postgres-path) # mapping of environment variables to add
    PGUSER: $(postgres-user)
    PGPASSWORD: $(all-dbs-password)
    POSTGRES_ENV_POSTGRES_USER: $(postgres-user)
    POSTGRES_ENV_POSTGRES_PASSWORD: $(all-dbs-password)
    POSTGRES_ENV_POSTGRES_DB: $(all-dbs-name)

- task: PowerShell@1
  inputs:
    targetType: 'filePath' # Optional. Options: filePath, inline
    filePath: .\build\dotnet-install.ps1 # Required when targetType == FilePath
    arguments: '-Version 2.1.300' # Optional
    env:

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
